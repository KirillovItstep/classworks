drop table if exists employer;
drop table if exists salary_grade;
drop table if exists department;

CREATE TABLE employer (
                           id integer not null primary key autoincrement,
                           name varchar(15) not null,
                           job varchar(10),
                           manager_id integer,
                           hire_date text,
                           salary float,
                           commission float,
                           department_id integer);

CREATE TABLE department (
                      id integer not null primary key autoincrement,
                      name varchar(20) not null,
                      location varchar(15));

CREATE TABLE salary_grade (
                       grade integer,
                       min_salary integer,
                       max_salary integer);
					   
BEGIN;
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id) 
 values (68319,'KAYLING','PRESIDENT',null,'1991-11-18',6000.00,null,1001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
values (66928, 'BLAZE', 'MANAGER', 68319, '1991-05-01', 2750.00,null, 3001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
values (67832, 'CLARE', 'MANAGER', 68319, '1991-06-09', 2550.00, null, 1001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (65646, 'JONAS', 'MANAGER', 68319, '1991-04-02', 2957.00, null, 2001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (67858, 'SCARLET', 'ANALYST', 65646, '1997-04-19', 3100.00, null, 2001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (69062, 'FRANK', 'ANALYST', 65646, '1991-12-03', 3100.00, null, 2001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (63679, 'SANDRINE', 'CLERK', 69062, '1990-12-18', 900.00, null, 2001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (64989, 'ADELYN', 'SALESMAN', 66928, '1991-02-20', 1700.00, 400.00, 3001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (65271, 'WADE', 'SALESMAN', 66928, '1991-02-22', 1350.00, 600.00, 3001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (66564, 'MADDEN', 'SALESMAN', 66928, '1991-09-28', 1350.00, 1500.00, 3001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (68454, 'TUCKER', 'SALESMAN', 66928, '1991-09-08', 1600.00, 0.00, 3001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (68736, 'ADNRES', 'CLERK', 67858, '1997-05-23', 1200.00, null, 2001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (69000, 'JULIUS', 'CLERK', 66928, '1991-12-03', 1050.00, null, 3001);
insert into employer(id,name,job,manager_id,hire_date,salary,commission,department_id)
 values (69324, 'MARKER', 'CLERK', 67832, '1992-01-23', 1400.00, null, 1001);

insert into department (id,name,location) values (1001, 'FINANCE', 'SYDNEY');
insert into department (id,name,location) values (2001, 'AUDIT', 'MELBOURNE');
insert into department (id,name,location) values (3001, 'MARKETING', 'PERTH');
insert into department (id,name,location) values (4001, 'PRODUCTION', 'BRISBANE');

insert into salary_grade (grade,min_salary,max_salary) values (1,800,1300);
insert into salary_grade (grade,min_salary,max_salary) values (2,1301,1500);
insert into salary_grade (grade,min_salary,max_salary) values (3,1501,2100);
insert into salary_grade (grade,min_salary,max_salary) values (4,2101,3100);
insert into salary_grade (grade,min_salary,max_salary) values (5,3101,9999);
commit;					   

--Напишите запрос в sql, чтобы отобразить id и имена менеджеров всех сотрудников.

--Напишите запрос в sql, чтобы отобразить id, имя, должность, дату найма и стаж работы менеджеров.

--Напишите запрос в sql, чтобы перечислить id, имя, зарплату, название отдела всех MANAGER и ANALYST, работающих в SYDNEY, PERTH.

--Напишите запрос в sql, чтобы перечислить всех сотрудников 2 и 3 классов.

--Напишите запрос в sql, чтобы перечислить сведения о сотрудниках, чья зарплата превышает зарплату JONAS.
select * from employer where manager_id =65646;

--Напишите запрос в sql, чтобы перечислить сотрудников, которые работают в той же должности, что и FRANK.

--Кого наняли раньше ADELYN?

--Напишите запрос на языке sql, чтобы составить список сотрудников отдела с id=2001,
-- которые работают в должностях, аналогичных отделу 1001.

--Напишите запрос в sql, чтобы найти информацию о наиболее высокооплачиваемом сотруднике

--Напишите запрос в sql, чтобы найти наиболее высокооплачиваемого сотрудника в отделе marketing

--Напишите запрос в sql, чтобы найти сотрудника, который был нанят первым в 1991 году.

--суммарная зарплата всех менеджеров (MANAGER)
select sum(salary) from employer where job like 'manager';

--Напишите запрос в SQL, чтобы отобразить общую зарплату сотрудников, относящихся к 3 классу.

--Перечислить сотрудников в отделе 1001, чья зарплата превышает среднюю зарплату сотрудников в отделе 2001

--Напишите запрос в SQL, чтобы отобразить сотрудников, имя менеджера которых JONAS
select * from employer where salary>(select salary from employer where name='JONAS');
select e1.name from employer as e1 join employer as e2 where e1.manager_id =e2.id and e2.name='JONAS';

--Напишите запрос в SQL, чтобы перечислить сотрудников, которые не работают в отделе MARKETING

--Напишите запрос в SQL, чтобы перечислить имена сотрудников, которые получают самую высокую зарплату в каждом отделе

--Напишите запрос в SQL, чтобы перечислить сотрудников, чья зарплата меньше, чем зарплата его менеджера,
--но больше, чем зарплата любого другого менеджера.

--Напишите запрос в SQL, чтобы перечислить сотрудников и среднюю зарплату сотрудников по отделу, где они работают.

--Напишите запрос в SQL, чтобы получить название отдела, где количество сотрудников равно количеству символов в названии отдела

--Напишите запрос в SQL, чтобы перечислить имена менеджеров отдела, в котором работает максимальное количество сотрудников

--Напишите запрос в SQL, чтобы найти отдел, где нет сотрудников

